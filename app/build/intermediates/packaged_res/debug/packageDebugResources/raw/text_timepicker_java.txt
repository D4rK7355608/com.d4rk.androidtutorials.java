// Import the necessary classes and libraries
import android.app.TimePickerDialog;
import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Locale;

// This class extends AppCompatActivity and represents the main activity of an Android app
public class MainActivity extends AppCompatActivity {

    // Declare a private lateinit variable for binding the layout with this activity
    private ActivityMainBinding binding;

    // Calendar instance to keep track of time
    private final Calendar calendar = Calendar.getInstance();

    // This method is called when the activity is first created
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        // Inflate the layout and set it as the content view for this activity
        binding = ActivityMainBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());

        // Create a SimpleDateFormat object to format time as HH:mm (24-hour format)
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("HH:mm", Locale.getDefault());

        // Get current time from calendar instance and format it using simpleDateFormat
        String dateTime = simpleDateFormat.format(calendar.getTime());

        // Set text of getTimeTextView in layout to formatted current time
        binding.getTimeTextView().setText(dateTime);

        // Set a click listener on getChangeTimeButton in layout
        binding.getChangeTimeButton().setOnClickListener(v -> {
            // Create an OnTimeSetListener to handle time selection in TimePickerDialog
            TimePickerDialog.OnTimeSetListener timeSetListener = (view, hourOfDay, minute) -> {
                // Update calendar instance with selected hour and minute
                calendar.set(Calendar.HOUR_OF_DAY, hourOfDay);
                calendar.set(Calendar.MINUTE, minute);

                // Format updated time using simpleDateFormat and set text of getTimeTextView in layout to formatted updated time
                binding.getTimeTextView().setText(new SimpleDateFormat("HH:mm", Locale.getDefault()).format(calendar.getTime()));
            };

            // Create and show a TimePickerDialog with current hour and minute pre-selected and 24-hour format enabled
            new TimePickerDialog(MainActivity.this, timeSetListener,
                    calendar.get(Calendar.HOUR_OF_DAY), calendar.get(Calendar.MINUTE), true).show();
        });
    }
}