// Generated by view binder compiler. Do not edit!
package com.d4rk.androidtutorials.java.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.d4rk.androidtutorials.java.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPasswordBoxBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buttonShowPassword;

  @NonNull
  public final TextInputEditText editText;

  @NonNull
  public final ConstraintLayout editTextLayout;

  @NonNull
  public final ExtendedFloatingActionButton floatingButtonShowSyntax;

  @NonNull
  public final MaterialButton showPasswordButton;

  private ActivityPasswordBoxBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buttonShowPassword, @NonNull TextInputEditText editText,
      @NonNull ConstraintLayout editTextLayout,
      @NonNull ExtendedFloatingActionButton floatingButtonShowSyntax,
      @NonNull MaterialButton showPasswordButton) {
    this.rootView = rootView;
    this.buttonShowPassword = buttonShowPassword;
    this.editText = editText;
    this.editTextLayout = editTextLayout;
    this.floatingButtonShowSyntax = floatingButtonShowSyntax;
    this.showPasswordButton = showPasswordButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPasswordBoxBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPasswordBoxBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_password_box, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPasswordBoxBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonShowPassword;
      MaterialButton buttonShowPassword = ViewBindings.findChildViewById(rootView, id);
      if (buttonShowPassword == null) {
        break missingId;
      }

      id = R.id.editText;
      TextInputEditText editText = ViewBindings.findChildViewById(rootView, id);
      if (editText == null) {
        break missingId;
      }

      id = R.id.editTextLayout;
      ConstraintLayout editTextLayout = ViewBindings.findChildViewById(rootView, id);
      if (editTextLayout == null) {
        break missingId;
      }

      id = R.id.floating_button_show_syntax;
      ExtendedFloatingActionButton floatingButtonShowSyntax = ViewBindings.findChildViewById(rootView, id);
      if (floatingButtonShowSyntax == null) {
        break missingId;
      }

      id = R.id.showPasswordButton;
      MaterialButton showPasswordButton = ViewBindings.findChildViewById(rootView, id);
      if (showPasswordButton == null) {
        break missingId;
      }

      return new ActivityPasswordBoxBinding((ConstraintLayout) rootView, buttonShowPassword,
          editText, editTextLayout, floatingButtonShowSyntax, showPasswordButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
