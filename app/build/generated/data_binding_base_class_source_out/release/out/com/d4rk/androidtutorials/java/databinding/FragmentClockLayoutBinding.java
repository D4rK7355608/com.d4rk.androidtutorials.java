// Generated by view binder compiler. Do not edit!
package com.d4rk.androidtutorials.java.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.d4rk.androidtutorials.java.R;
import com.google.android.gms.ads.AdView;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.zhanghai.android.fastscroll.FastScrollScrollView;

public final class FragmentClockLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AdView adView;

  @NonNull
  public final MaterialCardView cardViewAd;

  @NonNull
  public final FastScrollScrollView scrollView;

  @NonNull
  public final MaterialTextView textViewAnalogClock;

  @NonNull
  public final MaterialTextView textViewAnalogClockXml;

  @NonNull
  public final MaterialTextView textViewDigitalClock;

  @NonNull
  public final MaterialTextView textViewDigitalClockXml;

  @NonNull
  public final MaterialTextView textViewTextClock;

  @NonNull
  public final MaterialTextView textViewTextClockXml;

  private FragmentClockLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull AdView adView,
      @NonNull MaterialCardView cardViewAd, @NonNull FastScrollScrollView scrollView,
      @NonNull MaterialTextView textViewAnalogClock,
      @NonNull MaterialTextView textViewAnalogClockXml,
      @NonNull MaterialTextView textViewDigitalClock,
      @NonNull MaterialTextView textViewDigitalClockXml,
      @NonNull MaterialTextView textViewTextClock, @NonNull MaterialTextView textViewTextClockXml) {
    this.rootView = rootView;
    this.adView = adView;
    this.cardViewAd = cardViewAd;
    this.scrollView = scrollView;
    this.textViewAnalogClock = textViewAnalogClock;
    this.textViewAnalogClockXml = textViewAnalogClockXml;
    this.textViewDigitalClock = textViewDigitalClock;
    this.textViewDigitalClockXml = textViewDigitalClockXml;
    this.textViewTextClock = textViewTextClock;
    this.textViewTextClockXml = textViewTextClockXml;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentClockLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentClockLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_clock_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentClockLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ad_view;
      AdView adView = ViewBindings.findChildViewById(rootView, id);
      if (adView == null) {
        break missingId;
      }

      id = R.id.card_view_ad;
      MaterialCardView cardViewAd = ViewBindings.findChildViewById(rootView, id);
      if (cardViewAd == null) {
        break missingId;
      }

      id = R.id.scroll_view;
      FastScrollScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.text_view_analog_clock;
      MaterialTextView textViewAnalogClock = ViewBindings.findChildViewById(rootView, id);
      if (textViewAnalogClock == null) {
        break missingId;
      }

      id = R.id.text_view_analog_clock_xml;
      MaterialTextView textViewAnalogClockXml = ViewBindings.findChildViewById(rootView, id);
      if (textViewAnalogClockXml == null) {
        break missingId;
      }

      id = R.id.text_view_digital_clock;
      MaterialTextView textViewDigitalClock = ViewBindings.findChildViewById(rootView, id);
      if (textViewDigitalClock == null) {
        break missingId;
      }

      id = R.id.text_view_digital_clock_xml;
      MaterialTextView textViewDigitalClockXml = ViewBindings.findChildViewById(rootView, id);
      if (textViewDigitalClockXml == null) {
        break missingId;
      }

      id = R.id.text_view_text_clock;
      MaterialTextView textViewTextClock = ViewBindings.findChildViewById(rootView, id);
      if (textViewTextClock == null) {
        break missingId;
      }

      id = R.id.text_view_text_clock_xml;
      MaterialTextView textViewTextClockXml = ViewBindings.findChildViewById(rootView, id);
      if (textViewTextClockXml == null) {
        break missingId;
      }

      return new FragmentClockLayoutBinding((ConstraintLayout) rootView, adView, cardViewAd,
          scrollView, textViewAnalogClock, textViewAnalogClockXml, textViewDigitalClock,
          textViewDigitalClockXml, textViewTextClock, textViewTextClockXml);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
