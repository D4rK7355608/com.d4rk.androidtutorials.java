// Generated by view binder compiler. Do not edit!
package com.d4rk.androidtutorials.java.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.d4rk.androidtutorials.java.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.google.android.material.radiobutton.MaterialRadioButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRadioButtonsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buttonDisplay;

  @NonNull
  public final ExtendedFloatingActionButton floatingButtonShowSyntax;

  @NonNull
  public final MaterialRadioButton radioButtonFirstOption;

  @NonNull
  public final MaterialRadioButton radioButtonSecondOption;

  @NonNull
  public final RadioGroup radioGroup;

  private ActivityRadioButtonsBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buttonDisplay,
      @NonNull ExtendedFloatingActionButton floatingButtonShowSyntax,
      @NonNull MaterialRadioButton radioButtonFirstOption,
      @NonNull MaterialRadioButton radioButtonSecondOption, @NonNull RadioGroup radioGroup) {
    this.rootView = rootView;
    this.buttonDisplay = buttonDisplay;
    this.floatingButtonShowSyntax = floatingButtonShowSyntax;
    this.radioButtonFirstOption = radioButtonFirstOption;
    this.radioButtonSecondOption = radioButtonSecondOption;
    this.radioGroup = radioGroup;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRadioButtonsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRadioButtonsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_radio_buttons, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRadioButtonsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_display;
      MaterialButton buttonDisplay = ViewBindings.findChildViewById(rootView, id);
      if (buttonDisplay == null) {
        break missingId;
      }

      id = R.id.floating_button_show_syntax;
      ExtendedFloatingActionButton floatingButtonShowSyntax = ViewBindings.findChildViewById(rootView, id);
      if (floatingButtonShowSyntax == null) {
        break missingId;
      }

      id = R.id.radio_button_first_option;
      MaterialRadioButton radioButtonFirstOption = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonFirstOption == null) {
        break missingId;
      }

      id = R.id.radio_button_second_option;
      MaterialRadioButton radioButtonSecondOption = ViewBindings.findChildViewById(rootView, id);
      if (radioButtonSecondOption == null) {
        break missingId;
      }

      id = R.id.radio_group;
      RadioGroup radioGroup = ViewBindings.findChildViewById(rootView, id);
      if (radioGroup == null) {
        break missingId;
      }

      return new ActivityRadioButtonsBinding((ConstraintLayout) rootView, buttonDisplay,
          floatingButtonShowSyntax, radioButtonFirstOption, radioButtonSecondOption, radioGroup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
